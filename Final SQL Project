#Final SQL Project

/*Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
*/
SELECT firstname, lastname, customerID, country
    FROM Chinook.customers
    WHERE Country <> "US%";
    
/*Show only the Customers from Brazil.*/
SELECT firstname, lastname 
    FROM Chinook.customers
    WHERE Country = "Brazil";
    
/*Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.*/
SELECT firstname, lastname,InvoiceId, InvoiceDate, BillingCountry    
    FROM Chinook.customers cust
    LEFT JOIN Chinook.invoices inv
    ON cust.CustomerID = inv.CustomerId
    WHERE BillingCountry = "Brazil";
    
/*Show the Employees who are Sales Agents.*/
SELECT firstname,lastname
    FROM Chinook.employees
    WHERE title = "Sales Support Agent";
   
/*Find a unique/distinct list of billing countries from the Invoice table.*/
SELECT distinct BillingCountry
    FROM Chinook.invoices;
    
/*Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.*/
SELECT emp.LastName, emp.Firstname, inv.InvoiceId
FROM chinook.Employees emp 
JOIN chinook.Customers cust ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv ON Inv.CustomerId = cust.CustomerId;

/*Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.*/
SELECT emp.LastName, emp.Firstname, cust.FirstName, cust.LastName, cust.Country, inv.total
FROM chinook.employees emp 
JOIN chinook.Customers cust 
    ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
    ON Inv.CustomerId = cust.CustomerId;


/*How many Invoices were there in 2009?*/
SELECT COUNT(*)
FROM chinook.Invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/*What are total sales for 2009?*/
SELECT SUM(TOTAL)
    FROM chinook.invoices
    WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/*Write a query that includes the purchased track name with each invoice line ID.*/
SELECT t.name, i.invoicelineid
    FROM chinook.invoice_items i
    JOIN chinook.tracks t
    ON i.trackid = t.trackid;

/*Write a query that includes the purchased track name AND artist name with each invoice line ID.*/   
SELECT ar.name as Artist, t.Name as Track, i.InvoiceLineId
FROM chinook.Invoice_items i
LEFT JOIN chinook.tracks t 
ON i.TrackID=t.TrackID
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.ArtistID=a.ArtistID;

/*Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.*/
SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;

/*Show the total sales made by each sales agent.*/
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
GROUP BY emp.FirstName;

/*Which sales agent made the most dollars in sales in 2009?*/
SELECT emp.FirstName, emp.LastName,
ROUND(SUM(Inv.Total), 2) as 'Total Sales' 
FROM chinook.Employees emp
JOIN chinook.Customers cust 
ON cust.SupportRepId = emp.EmployeeId
JOIN chinook.Invoices Inv 
ON Inv.CustomerId = cust.CustomerId
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.InvoiceDate LIKE '2009%' 
GROUP BY emp.FirstName
ORDER BY (round(sum(Inv.Total), 2))  DESC LIMIT 1;

    
/*Which track appears on the most play lists*/
SELECT t.trackid, t.name, COUNT(p.playlistid) AS playlist_count
FROM chinook.tracks t
JOIN chinook.playlist_track pt ON t.trackid = pt.trackid
JOIN chinook.playlists p ON pt.playlistid = p.playlistid
GROUP BY t.trackid, t.name
ORDER BY playlist_count DESC
LIMIT 1;
